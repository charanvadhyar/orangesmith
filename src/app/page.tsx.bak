import Image from "next/image";
import Link from "next/link";
import { client } from '@/sanity/client';
import { urlForImage } from '@/sanity/client';

// Type definitions for our homepage content
type Hero = {
  title: string;
  description: string;
  backgroundImage?: any;
  cta?: { text: string; link: string; isMain: boolean }[];
};

type FeaturedCategories = {
  title: string;
  subtitle: string;
  categories?: {
    _id: string;
    title: string;
    slug: { current: string };
    image?: any;
  }[];
};

type FeaturedCollection = {
  title: string;
  subtitle: string;
  collection?: {
    _id: string;
    title: string;
    slug: { current: string };
  };
  featuredProducts?: {
    _id: string;
    name: string;
    slug: { current: string };
    price: number;
    images: any[];
  }[];
};

type Testimonials = {
  title: string;
  subtitle: string;
  testimonialsList?: {
    _id: string;
    name: string;
    location?: string;
    rating: number;
    quote: string;
    image?: any;
  }[];
};

type Newsletter = {
  title: string;
  description: string;
  buttonText: string;
};

type Value = {
  title: string;
  description: string;
  icon: string;
};

type HomepageData = {
  hero: Hero;
  featuredCategories: FeaturedCategories;
  featuredCollection: FeaturedCollection;
  testimonials: Testimonials;
  newsletter: Newsletter;
  values: Value[];
};

// This function fetches data at request time (Server Component)
async function getHomepageData(): Promise<HomepageData | null> {
  try {
    // Using Sanity client to fetch homepage data
    const homepage = await client.fetch(`
      *[_type == "homepage"][0]{
        hero,
        featuredCategories {
          ...,
          categories[]-> {
            _id,
            title,
            slug,
            image
          }
        },
        featuredCollection {
          ...,
          collection->,
          featuredProducts[]-> {
            _id,
            name,
            slug,
            price,
            images
          }
        },
        testimonials {
          ...,
          testimonialsList[]-> {
            _id,
            name,
            location,
            rating,
            quote,
            image
          }
        },
        newsletter,
        values
      }
    `);
    
    return homepage;
  } catch (error) {
    console.error('Error fetching homepage data:', error);
    return null;
  }
}

// This is a fallback configuration in case the CMS data isn't available yet
const fallbackData: HomepageData = {
  hero: {
    title: 'Timeless Elegance, Extraordinary Craftsmanship',
    description: 'Discover our exquisite collection of fine jewelry, crafted with passion and precision for moments that last forever.',
    cta: [
      { text: 'Explore Collections', link: '/collections', isMain: true },
      { text: 'New Arrivals', link: '/jewelry/new-arrivals', isMain: false }
    ]
  },
  featuredCategories: {
    title: 'Jewelry Categories',
    subtitle: 'Browse our curated selection of fine jewelry categories, each piece a testament to our dedication to excellence.',
    categories: []
  },
  featuredCollection: {
    title: 'The Celestial Collection',
    subtitle: 'Inspired by the cosmic wonders above, our Celestial Collection captures the brilliance of the night sky in every piece.',
    collection: undefined,
    featuredProducts: []
  },
  testimonials: {
    title: 'From Our Customers',
    subtitle: 'Hear what our valued customers have to say about their OrangeSmith experience.',
    testimonialsList: []
  },
  newsletter: {
    title: 'Join Our Newsletter',
    description: 'Subscribe to receive updates on new collections, exclusive offers, and jewelry care tips.',
    buttonText: 'Subscribe'
  },
  values: [
    {
      title: 'Ethical Sourcing',
      description: 'All our gemstones and precious metals are ethically sourced, ensuring our jewelry is as responsible as it is beautiful.',
      icon: 'M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z'
    },
    {
      title: 'Master Craftsmanship',
      description: 'Each piece is handcrafted by skilled artisans with decades of experience in fine jewelry creation.',
      icon: 'M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z'
    },
    {
      title: 'Lifetime Guarantee',
      description: 'We stand behind the quality of our jewelry with a lifetime guarantee and complimentary maintenance services.',
      icon: 'M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z'
    }
  ]
};

export default async function Home() {
  // Fetch data from Sanity
  const homepageData = await getHomepageData() || fallbackData;
  
  // Extract data from either Sanity or fallback with null safety
  const {
    hero = fallbackData.hero,
    featuredCategories = fallbackData.featuredCategories, 
    featuredCollection = fallbackData.featuredCollection,
    testimonials = fallbackData.testimonials,
    newsletter = fallbackData.newsletter,
    values = fallbackData.values
  } = homepageData;
  
  return (
    <div className="w-full">
      {/* Hero Section */}
      <section className="relative h-[80vh] w-full">
        <div className="absolute inset-0 bg-black/30 z-10"></div>
        <div className="relative h-full w-full">
          {/* Background image */}
          {hero && hero.backgroundImage ? (
            <Image 
              src={urlForImage(hero.backgroundImage).url()}
              alt="Luxury jewelry banner"
              fill
              priority
              className="object-cover"
            />
          ) : (
            <div className="absolute inset-0 bg-gradient-to-r from-champagneGold to-vividOrange opacity-20"></div>
          )}
          <div className="absolute inset-0 flex items-center justify-center z-20">
            <div className="container mx-auto px-4 text-center">
              <h1 className="text-4xl md:text-5xl lg:text-6xl font-display font-bold text-white mb-6">                
                {hero?.title || 'Timeless Elegance, Extraordinary Craftsmanship'}
              </h1>
              <p className="text-lg md:text-xl text-white/90 max-w-2xl mx-auto mb-8">
                {hero?.description || 'Discover our exquisite collection of fine jewelry, crafted with passion and precision for moments that last forever.'}
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                {hero?.cta?.map((button, index) => (
                  <Link 
                    key={index}
                    href={button.link} 
                    className={button.isMain 
                      ? "px-8 py-3 bg-vividOrange text-white font-medium rounded hover:bg-opacity-90 transition-all"
                      : "px-8 py-3 bg-transparent border border-white text-white font-medium rounded hover:bg-white/10 transition-all"
                    }
                  >
                    {button.text}
                  </Link>
                ))}
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Categories Section */}
      <section className="py-16 bg-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-display font-bold text-jetBlack mb-4">
              {featuredCategories?.title || 'Jewelry Categories'}
            </h2>
            <p className="text-slateGray max-w-2xl mx-auto">
              {featuredCategories?.subtitle || 'Browse our curated selection of fine jewelry categories, each piece a testament to our dedication to excellence.'}
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {featuredCategories.categories && featuredCategories.categories.length > 0 ? (
              featuredCategories.categories.map((category) => (
                <div key={category._id} className="group relative overflow-hidden rounded-lg">
                  <div className="absolute inset-0 bg-jetBlack group-hover:opacity-80 transition-opacity duration-300"></div>
                  {category.image ? (
                    <Image 
                      src={urlForImage(category.image).url()}
                      alt={category.title}
                      width={400}
                      height={320}
                      className="w-full h-80 object-cover"
                    />
                  ) : (
                    <div className="relative h-80 w-full"></div>
                  )}
                  <div className="absolute inset-0 flex items-center justify-center">
                    <div className="text-center">
                      <h3 className="text-xl font-display font-medium text-white mb-2">{category.title}</h3>
                      <Link 
                        href={`/collections/${category.slug.current}`} 
                        className="inline-block text-white text-sm border-b border-white/50 hover:border-white transition-all"
                      >
                        Explore Collection
                      </Link>
                    </div>
                  </div>
                </div>
              ))
            ) : (
              // Fallback for when no categories are defined yet
              ['Rings', 'Necklaces', 'Earrings', 'Bracelets'].map((categoryName, index) => (
                <div key={index} className="group relative overflow-hidden rounded-lg">
                  <div className="absolute inset-0 bg-jetBlack group-hover:opacity-80 transition-opacity duration-300"></div>
                  <div className="relative h-80 w-full"></div>
                  <div className="absolute inset-0 flex items-center justify-center">
                    <div className="text-center">
                      <h3 className="text-xl font-display font-medium text-white mb-2">{categoryName}</h3>
                      <Link 
                        href={`/collections/${categoryName.toLowerCase()}`} 
                        className="inline-block text-white text-sm border-b border-white/50 hover:border-white transition-all"
                      >
                        Explore Collection
                      </Link>
                    </div>
                  </div>
                </div>
              ))
            )}
          </div>
        </div>
      </section>

      {/* Featured Collection */}
      <section className="py-16 bg-lightGray">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <span className="text-vividOrange uppercase text-sm tracking-widest">Featured Collection</span>
            <h2 className="text-3xl font-display font-bold text-jetBlack mt-2 mb-4">{featuredCollection.title}</h2>
            <p className="text-slateGray max-w-2xl mx-auto">
              {featuredCollection.subtitle}
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mt-12">
            {featuredCollection.featuredProducts && featuredCollection.featuredProducts.length > 0 ? (
              featuredCollection.featuredProducts.map((product) => (
                <div key={product._id} className="bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow">
                  {product.images?.[0] ? (
                    <Image 
                      src={urlForImage(product.images[0]).url()}
                      alt={product.name}
                      width={400}
                      height={256}
                      className="w-full h-64 object-cover"
                    />
                  ) : (
                    <div className="relative h-64 w-full bg-gray-100"></div>
                  )}
                  <div className="p-6">
                    <h3 className="font-display text-lg font-medium text-jetBlack">{product.name}</h3>
                    <p className="text-slateGray text-sm mt-1 mb-3">Premium Luxury Jewelry</p>
                    <div className="flex justify-between items-center">
                      <span className="text-jetBlack font-medium">${product.price.toLocaleString()}</span>
                      <Link 
                        href={`/product/${product.slug.current}`} 
                        className="text-vividOrange text-sm font-medium hover:underline"
                      >
                        View Details
                      </Link>
                    </div>
                  </div>
                </div>
              ))
            ) : (
              // Fallback products
              [
                {name: 'Stardust Diamond Ring', price: 4250},
                {name: 'Luna Pendant', price: 2850},
                {name: 'Cosmic Earrings', price: 3150}
              ].map((product, index) => (
                <div key={index} className="bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow">
                  <div className="relative h-64 w-full bg-gray-100"></div>
                  <div className="p-6">
                    <h3 className="font-display text-lg font-medium text-jetBlack">{product.name}</h3>
                    <p className="text-slateGray text-sm mt-1 mb-3">Premium Luxury Jewelry</p>
                    <div className="flex justify-between items-center">
                      <span className="text-jetBlack font-medium">${product.price.toLocaleString()}</span>
                      <Link 
                        href={`/product/${product.name.toLowerCase().replace(/ /g, '-')}`} 
                        className="text-vividOrange text-sm font-medium hover:underline"
                      >
                        View Details
                      </Link>
                    </div>
                  </div>
                </div>
              ))
            )}
          </div>
          
          <div className="text-center mt-10">
            <Link 
              href={featuredCollection.collection ? `/collections/${featuredCollection.collection.slug.current}` : "/collections/celestial"} 
              className="inline-block px-8 py-3 bg-jetBlack text-white font-medium rounded hover:bg-jetBlack/90 transition-all"
            >
              View Full Collection
            </Link>
          </div>
        </div>
      </section>

      {/* Testimonials Section */}
      <section className="py-16 bg-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-display font-bold text-jetBlack mb-4">{testimonials.title}</h2>
                        alt={testimonial.name}
                        width={48}
                        height={48}
                        className="w-12 h-12 rounded-full object-cover mr-4"
                      />
                    ) : (
                      <div className="w-12 h-12 rounded-full bg-gray-300 mr-4"></div>
                    )}
                    <div>
                      <h4 className="font-medium text-jetBlack">{testimonial.name}</h4>
                      <div className="flex text-vividOrange">
                        {[...Array(5)].map((_, i) => (
                          <span key={i} className={i < testimonial.rating ? "" : "text-gray-300"}>
                            ★
                          </span>
                        ))}
                      </div>
                    </div>
                  </div>
                  <p className="text-slateGray">
                    "{testimonial.quote}"
                  </p>
                </div>
              ))
            ) : (
              // Fallback testimonials
              [
                {
                  name: 'Emily Johnson',
                  quote: 'The engagement ring I purchased exceeded all expectations. The craftsmanship is impeccable and the diamonds catch light beautifully. Customer service was exceptional throughout.',
                  rating: 5
                },
                {
                  name: 'Michael Chen',
                  quote: 'I was looking for the perfect anniversary gift and found exactly what I needed. The jewelry arrived in elegant packaging and my wife absolutely loves her new necklace.',
                  rating: 5
                },
                {
                  name: 'Sophia Rodriguez',
                  quote: 'I\'ve purchased several pieces from OrangeSmith over the years and have always been impressed with the quality. Their customer service team is responsive and shipping is always prompt.',
                  rating: 5
                }
              ].map((testimonial, index) => (
                <div key={index} className="bg-lightGray p-8 rounded-lg">
                  <div className="flex items-center mb-4">
                    <div className="w-12 h-12 rounded-full bg-gray-300 mr-4"></div>
                    <div>
                      <h4 className="font-medium text-jetBlack">{testimonial.name}</h4>
                      <div className="flex text-vividOrange">
                        {[...Array(5)].map((_, i) => (
                          <span key={i} className={i < testimonial.rating ? "" : "text-gray-300"}>
                            ★
                          </span>
                        ))}
                      </div>
                    </div>
                  </div>
                  <p className="text-slateGray">
                    "{testimonial.quote}"
                  </p>
                </div>
              ))
            )}
          </div>
        </div>
      </section>

      {/* Newsletter Section */}
      <section className="py-16 bg-champagneGold text-white">
        <div className="container mx-auto px-4">
          <div className="max-w-3xl mx-auto text-center">
            <h2 className="text-3xl font-display font-bold mb-4">{newsletter.title}</h2>
            <p className="mb-8">
              {newsletter.description}
            </p>
            <form className="flex flex-col sm:flex-row gap-4">
              <input 
                type="email" 
                placeholder="Your email address" 
                className="flex-1 px-6 py-3 rounded text-jetBlack focus:outline-none focus:ring-2 focus:ring-vividOrange"
              />
              <button 
                type="submit" 
                className="px-8 py-3 bg-jetBlack text-white font-medium rounded hover:bg-opacity-90 transition-all"
              >
                {newsletter.buttonText || 'Subscribe'}
              </button>
            </form>
            <p className="text-sm mt-4 text-white/80">
              By subscribing, you agree to our Privacy Policy and consent to receive updates.
            </p>
          </div>
        </div>
      </section>

      {/* Values Section */}
      <section className="py-16 bg-white">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {values.map((value, index) => (
              <div key={index} className="text-center">
                <div className="w-16 h-16 mx-auto mb-4 flex items-center justify-center rounded-full bg-lightGray">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-vividOrange" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d={value.icon} />
                  </svg>
                </div>
                <h3 className="text-xl font-display font-medium text-jetBlack mb-3">{value.title}</h3>
                <p className="text-slateGray">
                  {value.description}
                </p>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}
