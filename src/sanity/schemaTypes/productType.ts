import {defineField, defineType} from 'sanity'

export const productType = defineType({
  name: 'product',
  title: 'Product',
  type: 'document',
  groups: [
    {
      name: 'basics',
      title: 'Basic Information',
    },
    {
      name: 'media',
      title: 'Media & Assets',
    },
    {
      name: 'details',
      title: 'Product Details',
    },
    {
      name: 'related',
      title: 'Related Products',
    },
    {
      name: 'seo',
      title: 'SEO & Metadata',
    },
  ],
  fields: [
    defineField({
      name: 'name',
      title: 'Name',
      type: 'string',
      group: 'basics',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'slug',
      title: 'Slug',
      type: 'slug',
      group: 'basics',
      options: {
        source: 'name',
        maxLength: 96,
      },
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'sku',
      title: 'SKU',
      type: 'string',
      group: 'basics',
      description: 'Unique product identifier code',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'images',
      title: 'Product Images',
      type: 'array',
      group: 'media',
      of: [{type: 'image', options: {hotspot: true}}],
      validation: (Rule) => Rule.required().min(1),
    }),
    defineField({
      name: 'categories',
      title: 'Categories',
      type: 'array',
      group: 'basics',
      of: [{type: 'reference', to: {type: 'jewelryCategory'}}],
    }),
    defineField({
      name: 'collections',
      title: 'Collections',
      type: 'array',
      group: 'basics',
      of: [{type: 'reference', to: {type: 'collection'}}],
    }),
    defineField({
      name: 'description',
      title: 'Description',
      type: 'text',
      group: 'details',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'price',
      title: 'Price',
      type: 'number',
      group: 'basics',
      validation: (Rule) => Rule.required().positive(),
    }),
    defineField({
      name: 'comparePrice',
      title: 'Compare Price',
      type: 'number',
      group: 'basics',
      description: 'Original price before discount',
    }),
    defineField({
      name: 'materials',
      title: 'Materials',
      type: 'array',
      group: 'details',
      of: [{type: 'reference', to: {type: 'material'}}],
    }),
    defineField({
      name: 'gemstones',
      title: 'Gemstones',
      type: 'array',
      group: 'details',
      of: [{type: 'reference', to: {type: 'gemstone'}}],
    }),
    defineField({
      name: 'variants',
      title: 'Variants',
      type: 'array',
      group: 'basics',
      of: [
        {
          type: 'object',
          fields: [
            {
              name: 'title',
              title: 'Title',
              type: 'string',
              validation: (Rule) => Rule.required(),
            },
            {
              name: 'price',
              title: 'Price',
              type: 'number',
            },
            {
              name: 'sku',
              title: 'SKU',
              type: 'string',
            },
            {
              name: 'inStock',
              title: 'In Stock',
              type: 'boolean',
              initialValue: true,
            },
          ],
        },
      ],
    }),
    defineField({
      name: 'features',
      title: 'Features',
      type: 'array',
      group: 'details',
      of: [{type: 'string'}],
    }),
    defineField({
      name: 'specifications',
      title: 'Product Specifications',
      type: 'array',
      group: 'details',
      of: [{
        type: 'object',
        fields: [
          {
            name: 'name',
            title: 'Specification Name',
            type: 'string',
            validation: (Rule) => Rule.required(),
          },
          {
            name: 'value',
            title: 'Specification Value',
            type: 'string',
            validation: (Rule) => Rule.required(),
          },
        ],
      }],
    }),
    defineField({
      name: 'dimensions',
      title: 'Dimensions',
      type: 'string',
      group: 'details',
      description: 'Size, carat weight, etc.',
    }),
    defineField({
      name: 'measurements',
      title: 'Measurements',
      type: 'text',
      group: 'details',
      description: 'Detailed measurements information',
    }),
    defineField({
      name: 'isFeatured',
      title: 'Featured Product',
      type: 'boolean',
      group: 'basics',
      initialValue: false,
    }),
    defineField({
      name: 'isNew',
      title: 'New Arrival',
      type: 'boolean',
      group: 'basics',
      initialValue: false,
    }),
    defineField({
      name: 'isBestseller',
      title: 'Bestseller',
      type: 'boolean',
      group: 'basics',
      initialValue: false,
    }),
    defineField({
      name: 'ijewel3dCode',
      title: 'iJewel 3D Model Code',
      type: 'string',
      group: 'media',
      description: 'Code from iJewele 3D for embedding the 3D model iframe of the jewelry',
    }),
    defineField({
      name: 'modelWearingImage',
      title: 'Model Wearing Image',
      type: 'image',
      group: 'media',
      options: { hotspot: true },
      description: 'Image of a model wearing this jewelry piece (displayed on hover)',
    }),
    defineField({
      name: 'productVideo',
      title: 'Product Video',
      type: 'file',
      group: 'media',
      description: 'Video showcasing the jewelry piece',
      options: {
        accept: 'video/*',
      },
    }),
    defineField({
      name: 'certificateImage',
      title: 'IGI Certificate Image',
      type: 'image',
      group: 'media',
      options: { hotspot: true },
      description: 'Image of the IGI certificate for this jewelry piece',
    }),
    defineField({
      name: 'certificateNumber',
      title: 'Certificate Number',
      type: 'string',
      group: 'details',
      description: 'IGI or other certification number',
    }),
    defineField({
      name: 'shippingInfo',
      title: 'Shipping Information',
      type: 'object',
      group: 'details',
      fields: [
        {
          name: 'isFreeShipping',
          title: 'Free Shipping',
          type: 'boolean',
          initialValue: true,
        },
        {
          name: 'deliveryTime',
          title: 'Estimated Delivery Time (days)',
          type: 'number',
          initialValue: 4,
        },
        {
          name: 'shippingNote',
          title: 'Shipping Note',
          type: 'string',
          initialValue: 'Standard Delivery',
        },
      ],
    }),
    defineField({
      name: 'relatedProducts',
      title: 'Related Products',
      type: 'array',
      group: 'related',
      of: [{ type: 'reference', to: { type: 'product' } }],
      description: 'Similar style products that customers might be interested in',
    }),
    defineField({
      name: 'frequentlyBoughtTogether',
      title: 'Frequently Bought Together',
      type: 'array',
      group: 'related',
      of: [{ type: 'reference', to: { type: 'product' } }],
      description: 'Products often purchased along with this item',
    }),
    defineField({
      name: 'seo',
      title: 'SEO',
      type: 'object',
      group: 'seo',
      fields: [
        {name: 'title', title: 'Title', type: 'string'},
        {name: 'description', title: 'Description', type: 'text'},
        {name: 'keywords', title: 'Keywords', type: 'array', of: [{type: 'string'}]},
      ],
    }),
  ],
  preview: {
    select: {
      title: 'name',
      media: 'images.0',
    },
  },
})
